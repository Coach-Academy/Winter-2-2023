#include <bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
using namespace std;

int n;
vector<vector<int>> adj;
vector<int> in_degree, topo_order;

void topo_sort() {
    queue<int> q;

    for (int i = 0; i < n; ++i) {
        if (!in_degree[i])
            q.push(i);
    }

    while (!q.empty()) {
        int u = q.front();
        q.pop();

        topo_order.push_back(u);

        for (int v: adj[u]) {
            if (!--in_degree[v])
                q.push(v);
        }
    }
}

int main() {
    FIO
    int m;
    cin >> n >> m;
    adj.resize(n);
    in_degree.resize(n);
    for (int i = 0; i < m; ++i) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        in_degree[v]++;
    }
    topo_sort();
    if (topo_order.size() != n) {
        cout << "the graph has circular dependencies\n";
    }
    else {
        for (int u: topo_order)
            cout << u << " ";
        cout << "\n";
    }
    return 0;
}
