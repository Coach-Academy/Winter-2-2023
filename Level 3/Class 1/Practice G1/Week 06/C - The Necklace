#include <bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
using namespace std;

const int N = 51;
vector<vector<int>> edges;
vector<int> path;
void euler(int u) {
    for (int v = 1; v < N; ++v) {
        if (edges[u][v]) {
            edges[u][v]--;
            edges[v][u]--;
            euler(v);
        }
    }
    path.push_back(u);
}

int main() {
    int t;
    cin >> t;
    for (int tc = 1; tc <= t; ++tc) {
        int n;
        cin >> n;
        path.clear();
        edges = vector<vector<int>>(N, vector<int>(N));
        vector<int> deg(N);
        for (int i = 0; i < n; ++i) {
            int u, v;
            cin >> u >> v;
            edges[u][v]++;
            edges[v][u]++;
            deg[u]++;
            deg[v]++;
        }
        bool valid = true;
        int st = -1;
        for (int i = 1; i < N; ++i) {
            if (deg[i] % 2) valid = false;
            if (deg[i] > 0) st = i;
        }
        euler(st);
        if (path.size() != n + 1) valid = false;

        if (tc > 1) cout << "\n";
        cout << "Case #" << tc << "\n";
        if (valid) {
            for (int i = 0; i + 1 < path.size(); ++i) {
                cout << path[i] << " " << path[i + 1] << "\n";
            }
        }
        else {
            cout << "some beads may be lost\n";
        }
    }
    return 0;
}
